## 解法1：
TC： O(n^2)  SC: O(n)

主要部分还是当作只有左右括号的问题来处理。对于*，只记录它出现的idx，不入栈。

对于最后stack中未能配对的括号，我们就找之前或之后是否出现过*，可以与之抵消。

对于左括号，则在这个左括号之后找有没有星号；对于右括号，则在这个右括号之前找有没有星号。
```
class Solution:
    def checkValidString(self, s: str) -> bool:
        stack = []
        record = []
        for i, ch in enumerate(s):
            if ch == "(":
                stack.append(i)
            elif ch == "*":
                record.append(i)
            else:
                if stack and s[stack[-1]] == "(":
                    stack.pop()
                else:
                    stack.append(i)

        if not stack:
            return True

        for idx in stack:
            if s[idx] == "(":
                if not self.starFinder(idx, "right", record):
                    return False
            if s[idx] == ")":
                if not self.starFinder(idx, "left", record):
                    return False
        return True
                
    
    def starFinder(self, idx, direction, record):
        if direction == "right":
            for star in record:
                if star > idx:
                    record.remove(star)
                    return True
            return False        
        else:
            for star in record:
                if star < idx:
                    record.remove(star)
                    return True
            return False  

```
                
