## 解法1； 先数个数，再赋值
TC: O(N) SC: O(1)

```
class Solution:
    def sortColors(self, nums: List[int]) -> None:
        """
        Do not return anything, modify nums in-place instead.
        """
        counter = collections.Counter(nums)
        idx = 0
        while idx < len(nums):
            if idx < counter[0]:
                nums[idx] = 0
            elif idx < counter[0] + counter[1]:
                nums[idx] = 1
            else:
                nums[idx] = 2
            idx += 1
```

## 解法2: 三指针
One Pass

TC: O(N) SC: O(1)
```
class Solution:
    def sortColors(self, nums: List[int]) -> None:
        """
        Do not return anything, modify nums in-place instead.
        """
        idx = 0
        left, right = 0, len(nums) - 1
        
        while idx <= right:
            if nums[idx] == 0:
                nums[idx], nums[left] = nums[left], nums[idx]
                left += 1
                idx += 1
            elif nums[idx] == 2:
                nums[idx], nums[right] = nums[right], nums[idx]
                right -= 1
            
            else:
                idx += 1
```
