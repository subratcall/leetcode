套用模板
```
class Solution:
    def searchRange(self, nums: List[int], target: int) -> List[int]:
        if not nums:
            return [-1, -1]
        left = self.binarySearch(nums, target, "left")
        right = self.binarySearch(nums, target, "right")
        return [left, right]
    
    def binarySearch(self, nums, target, direction):
        if not nums:
            return -1
        left, right = 0, len(nums) - 1
        while left + 1 < right:
            mid = (left + right) // 2
            if nums[mid] < target:
                left = mid
            elif nums[mid] > target:
                right = mid
            else:
                if direction == "left": right = mid
                if direction == "right": left = mid
        
        if direction == "left":
            if nums[left] == target: return left
            if nums[right] == target: return right
            return -1 
            
        if direction == "right":
            if nums[right] == target: return right
            if nums[left] == target: return left
            return -1 
    
```
