用stack记录左括号。遇到右括号的时候，pop，或者加到to_remove。
```
class Solution:
    def minRemoveToMakeValid(self, s: str) -> str:
        to_remove = []
        stack = []
        
        i = 0
        while i < len(s):
            if s[i] == "(":
                stack.append(i)
            elif s[i] == ")":
                if stack:
                    stack.pop()
                else:
                    to_remove.append(i)
            i += 1
        to_delete = set(to_remove + stack)
        res = []
        for i in range(len(s)):
            if i not in to_delete:
                res.append(s[i])
                
        return ''.join(res)

```


基本原理是一样的，但是第二种写法要简明不少。遇到需要删除的，当时就标记为空。


stack只存储"("。当出现右括号时，要么直接弹出一位，要么要把这个括号删掉。
```
class Solution:
    def minRemoveToMakeValid(self, s: str) -> str:
        s = list(s)
        stack = []
        for i, ch in enumerate(s):
            if ch == "(":
                stack.append(i)
            elif ch == ")":
                if stack:
                    stack.pop()
                else:
                    s[i] = ''
        while stack:
            s[stack.pop()] = ''

        return ''.join(s)
```
